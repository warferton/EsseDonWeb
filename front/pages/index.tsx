import Head from 'next/head';
import { CardSlider } from '../components/cards/slider/card-slider.component';
import { LogoHeader } from '../components/headers/header.compenent';
import { Footer } from '../components/footer/footer.component';
import { BigEventCard } from '../components/cards/bigCard.component';
import { EventCard } from '../components/cards/card.component';
import { SmallEventCard } from '../components/cards/smallCard.component';
import{ SwipeableStepper } from '../components/cards/carousel/carousel.component';
import { NavigationFab } from '../components/navigation/navigation-fab.component'
import { IEvent } from '../types/event/event.type';
import { Typography } from '@material-ui/core';

import styles from '/styles/textAfisha.module.css';
import { fetchAllActiveEvents } from '../utils/api-utils';


interface IProps {
  mainGroupEvents: IEvent[];
  secondGroupEvents: IEvent[];
  generalGroupEvents: IEvent[];
}

export default function Home({ mainGroupEvents, secondGroupEvents, generalGroupEvents } : IProps) {

  return (
    <>
      <Head>
        <title>Эссе-Дон</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <LogoHeader/>

        <>
          <NavigationFab>
            <SwipeableStepper>
              { 
                mainGroupEvents.map((event : IEvent) => 

                  <BigEventCard key={ event._id } event={ event }/>

                )
              }
            </SwipeableStepper>

            <Typography className = { styles.heading }>
              Лучшее на этой неделе
            </Typography>
            
            <CardSlider>
              { secondGroupEvents.map((event : IEvent)=> 
            
                <SmallEventCard key={ event._id } event={ event }/>

                )
              }
            </CardSlider>

            { generalGroupEvents.map((event : IEvent) => 
            
                <EventCard key={ event._id } event={ event }/>

              )
            }
            </NavigationFab>
            <Footer position='static'/>
          </>
    </>

  )
}

export const getStaticProps = async () => {
  
   const result = await fetchAllActiveEvents();
  
   return {
      props: { ...result }
   };
}
