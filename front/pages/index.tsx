import { useEffect, useState } from 'react';

import Head from 'next/head';
import { CardSlider } from '../components/cards/slider/card-slider.component';
import { LogoHeader } from '../components/headers/header.compenent';
import { Footer } from '../components/footer/footer.component';
import { BigEventCard } from '../components/cards/bigCard.component';
import { EventCard } from '../components/cards/card.component';
import { SmallEventCard } from '../components/cards/smallCard.component';
import{ SwipeableStepper } from '../components/cards/carousel/carousel.component';
import { NavigationFab } from '../components/navigation/navigation-fab.component'
import { IEvent } from '../types/event/event.type';
import { Typography } from '@material-ui/core';

import styles from '/styles/textAfisha.module.css';
import axios from 'axios';



const API_URL = "http://localhost:3030/api/v1/events/active"

export default function Home() {

  const [isLoading, setIsLoading] = useState(true);

  const [mainEvents, setMainEvents] = useState([]);
  const [secondEvents, setSecondEvents] = useState([]);
  const [generalEvents, setGeneralEvents] = useState([]);

  useEffect(() => {
    fetchAllActiveEvents();
    setTimeout(() => {setIsLoading(false)}, 500);
  }, [])

  const fetchAllActiveEvents = () => {
  
    const mainGroupEvents : IEvent[]= [];
    const secondGroupEvents : IEvent[] = [];
    const generalGroupEvents : IEvent[]= [];
  
    axios
    .get(API_URL)
    .then(res => 
      res.data.events.map((event : IEvent) => {
        if( event.block === "main")
          mainGroupEvents.push(event);
        else if( event.block === "second")
          secondGroupEvents.push(event);
        else if( event.block === "general")
          generalGroupEvents.push(event);
        })
    ).catch(err => console.log(err));
  
    setMainEvents(mainGroupEvents);
    setSecondEvents(secondGroupEvents);
    setGeneralEvents(generalGroupEvents);
  }



  return (
    <>
      <Head>
        <title>Эссе-Дон</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <LogoHeader/>

      { isLoading ?  <h2>LOADING ...//</h2>  : 
        <>
          <NavigationFab>
            <SwipeableStepper>
              { 
                mainEvents.map((event : IEvent) => 

                  <BigEventCard key={ event._id } event={ event }/>

                )
              }
            </SwipeableStepper>


            <Typography className = { styles.heading }>
              Лучшее на этой неделе
            </Typography>
            
            <CardSlider>
              { secondEvents.map((event : IEvent)=> 
            
                <SmallEventCard key={ event._id } event={ event }/>

                )
              }
            </CardSlider>

            { generalEvents.map((event : IEvent) => 
            
                <EventCard key={ event._id } event={ event }/>

              )
            }
            </NavigationFab>
            <Footer/>
          </>
        }
    </>

  )
}
