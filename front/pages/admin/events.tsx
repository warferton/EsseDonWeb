import Head from 'next/head'
import { SetStateAction, useState, ChangeEvent } from 'react';
import { AdminHeader } from '../../components/headers/adminHeader.component';
import { MenuAccordion } from '../../components/menu/menu-accordion.component';
import { EventControlList } from '../../components/admin-components/list-components/event-control-list.component';
import { EventListItemButtons as ListItem } from '../../components/admin-components/list-components/list-item.component';
import { Container, Button, Typography, makeStyles, createStyles, Theme } from '@material-ui/core';
import { ArrowBackIos as ArrowBack } from'@material-ui/icons';
import { motion } from 'framer-motion';

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    root: {
        marginTop: '5rem',
        marginBottom: '2rem',
        width: '95%',
    },
    accordion: {
        marginTop: '2rem',
    },
    buttonContainer:{
        marginTop: '4rem',
        padding: '1rem',
    },
    box:{
        backgroundColor: 'white'
    },
    createButton: {
        borderStartEndRadius: 0,    
        borderStartStartRadius: 0,
    },
    button: {
        color: 'white',
        backgroundColor: '#222222',
        "&:hover":{
            backgroundColor: '#000000',
        }
    }
  })
);


export default function EventControlPage () {

    const classes = useStyles();

    const [expanded, setExpanded] = useState(null);

    const [activeList, setActiveList] = useState(false);

    const handleChange = (panel : SetStateAction<string>) => (event: ChangeEvent<{}>, isExpanded : boolean) => {
        setExpanded(isExpanded ? panel : null);
    };

    setTimeout(() => {
        setActiveList(true)
    }, 1500);

    //=======MOCK==========

    const publishedEvent = {
        value: '',
        published: true,
        id: '00000'
    }

    const unPublishedEvent = {
        value: '',
        published: false,
        id: '00000'
    }

    //=======MOCK==========



    return (
        <>
            <Head>
                <title>Мероприятия | Админ</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <AdminHeader />

            <motion.div
            initial={{ 
                x: '200vw',
                opacity: 0
            }}
            animate={{ 
                x: 0,
                opacity: 100
             }}
            >
                <Container className={ classes.root }>
                    <Container>
                        <Typography variant='h3' align='center'>
                            Мероприятия
                        </Typography>
                    </Container>
                    
                
                    <MenuAccordion 
                        title="Опубликованные"
                        expanded={ expanded === 'mainBlock' } 
                        onChange={ handleChange('mainBlock') } 
                        className={ classes.accordion }
                        >

                            <EventControlList active={ activeList } childWrapper={ ListItem }>
                                {
                                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((value : number) =>{
                                       return {
                                            value: value,
                                            published: false,
                                            id: '00000'
                                        }
                                    })
                                
                                }
                            </EventControlList>

                        </MenuAccordion>

                        <MenuAccordion 
                        title="Архив"
                        expanded={ expanded === 'weekBest' } 
                        onChange={ handleChange('weekBest') } 
                        >

                           <EventControlList active={ activeList } childWrapper={ ListItem }>
                                {
                                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((value : number) =>{
                                       return {
                                            value: value,
                                            published: false,
                                            id: '00000'
                                        }
                                    })
                                
                                }
                            </EventControlList>
                        
                        </MenuAccordion>
                        <Button fullWidth variant='contained' className={ `${classes.button} ${classes.createButton}`}>
                            <Typography align='center'>
                                Создать новое мероприятие
                            </Typography>
                        </Button>
                </Container>
                
            </motion.div>

        <motion.div
            initial={{ 
                y: '200vw',
                opacity: 0
            }}
            animate={{ 
                y: 0,
                opacity: 100
             }}
            transition={{delay: 0.5, stiffness: 90}}
        >
            <Container className={ classes.buttonContainer }>
                <Button 
                variant='contained' 
                href="./" 
                fullWidth 
                startIcon={ <ArrowBack/> }
                className={ classes.button }
                >
                    <Typography variant='h6'>
                        Назад
                    </Typography>
                </Button>
            </Container>
        </motion.div>
            
        </>
    );
}